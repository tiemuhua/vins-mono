From 2dc970b3d909c6db13a2617e061aa08d21eabe27 Mon Sep 17 00:00:00 2001
From: tiemuhuaguo <tiemuhuaguo@tencent.com>
Date: Sun, 15 Oct 2023 10:44:00 +0800
Subject: [PATCH] build

---
 .gitignore         |  2 ++
 CMakeLists.txt     | 43 ++++++++++++++++---------------------------
 src/DBoW2.cmake.in |  2 +-
 3 files changed, 19 insertions(+), 28 deletions(-)
 create mode 100644 .gitignore

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..13992f2
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,2 @@
+install*/
+build*/
\ No newline at end of file
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 6f83c07..616147f 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -30,36 +30,26 @@ set(SRCS
   src/BowVector.cpp     src/FBrief.cpp        src/FSurf64.cpp       src/FORB.cpp
   src/FeatureVector.cpp src/QueryResults.cpp  src/ScoringObject.cpp)
 
-set(DEPENDENCY_DIR ${CMAKE_CURRENT_BINARY_DIR}/dependencies)
-set(DEPENDENCY_INSTALL_DIR ${DEPENDENCY_DIR}/install)
-
+# 这里必须要依赖Eigen，否则会报错
+#   The link interface of target "opencv_bgsegm" contains:
+#
+#    Eigen3::Eigen
+#
+#  but the target was not found.  Possible reasons include:
+#
+#    * There is a typo in the target name.
+#    * A find_package call is missing for an IMPORTED target.
+#    * An ALIAS target is missing.
+#  ld: library not found for -lEigen3::Eigen
 find_package(OpenCV REQUIRED)
+find_package(Eigen3 REQUIRED)
 include_directories(${OpenCV_INCLUDE_DIRS})
 
 find_package(Boost REQUIRED)
-include_directories(${Boost_INCLUDE_DIR})
+include_directories(${Boost_INCLUDE_DIRS})
 
-find_package(DLib QUIET 
-  PATHS ${DEPENDENCY_INSTALL_DIR})
-if(${DLib_FOUND})
-  message("DLib library found, using it from the system")
-  include_directories(${DLib_INCLUDE_DIRS})
-  add_custom_target(Dependencies)
-else(${DLib_FOUND})
-  message("DLib library not found in the system, it will be downloaded on build")
-  option(DOWNLOAD_DLib_dependency "Download DLib dependency" ON)
-  if(${DOWNLOAD_DLib_dependency})
-    ExternalProject_Add(DLib
-      PREFIX ${DEPENDENCY_DIR}
-      GIT_REPOSITORY http://github.com/dorian3d/DLib
-      GIT_TAG v1.1-nonfree
-      INSTALL_DIR ${DEPENDENCY_INSTALL_DIR}
-      CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=<INSTALL_DIR>)
-    add_custom_target(Dependencies ${CMAKE_COMMAND} ${CMAKE_SOURCE_DIR} DEPENDS DLib)
-  else()
-    message(SEND_ERROR "Please, activate DOWNLOAD_DLib_dependency option or download manually")
-  endif(${DOWNLOAD_DLib_dependency})
-endif(${DLib_FOUND})
+find_package(DLib REQUIRED)
+include_directories(${DLib_INCLUDE_DIRS})
 
 if(BUILD_DBoW2)
   add_library(${PROJECT_NAME} SHARED ${SRCS})
@@ -82,7 +72,6 @@ if(BUILD_DBoW2)
   install(DIRECTORY include/DBoW2 DESTINATION ${CMAKE_INSTALL_PREFIX}/include)
 endif()
 install(FILES "${CMAKE_CURRENT_BINARY_DIR}/DBoW2Config.cmake"
-  DESTINATION ${CMAKE_INSTALL_PREFIX}/include/${PROJECT_NAME})
+  DESTINATION ${CMAKE_INSTALL_PREFIX}/include/)
 install(FILES "${PROJECT_BINARY_DIR}/DBoW2Config.cmake" 
   DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/cmake/DBoW2/)
-install(DIRECTORY ${DEPENDENCY_INSTALL_DIR}/ DESTINATION ${CMAKE_INSTALL_PREFIX} OPTIONAL)
diff --git a/src/DBoW2.cmake.in b/src/DBoW2.cmake.in
index c3f9203..f073131 100644
--- a/src/DBoW2.cmake.in
+++ b/src/DBoW2.cmake.in
@@ -2,7 +2,7 @@ FIND_LIBRARY(DBoW2_LIBRARY DBoW2
     PATHS @CMAKE_INSTALL_PREFIX@/lib
 )
 FIND_PATH(DBoW2_INCLUDE_DIR DBoW2Config.cmake
-    PATHS @CMAKE_INSTALL_PREFIX@/include/@PROJECT_NAME@ 
+    PATHS @CMAKE_INSTALL_PREFIX@/include/ 
 )
 SET(DBoW2_LIBRARIES ${DBoW2_LIBRARY})
 SET(DBoW2_LIBS ${DBoW2_LIBRARY})
-- 
2.37.1 (Apple Git-137.1)

